package org.example.Multithread.AdvancedJoin;public class TestThread {    public static void main(String[] args) {        Thread t1 = new Thread(()->{            Thread.currentThread().setName("Testing Thread");            System.out.println("Thread is Running");            System.out.println(Thread.currentThread().getName()+"---->"+Thread.currentThread().getState());            Thread t2 = new Thread(()->{                Thread.currentThread().setName("Thread 2");                System.out.println("Thread 1 calling Thread 2");            });            // Testing Thread is the current thread            System.out.println("Current Thread ---> "+Thread.currentThread().getName() +"---->"+Thread.currentThread().getState());            t2.start();            //As we make Testing Thread sleep Thread 2 starts executing.            try {                System.out.println("Calling join from: " + Thread.currentThread().getName());                t2.join();            } catch (InterruptedException e) {                throw new RuntimeException(e);            }            System.out.println("The State for t2 is "+t2.getState());            System.out.println("Current Thread ---> "+Thread.currentThread().getName() +"---->"+Thread.currentThread().getState());        });        // Sleeping for Main Thread to trigger thread 1        try {            Thread.sleep(100);        } catch (InterruptedException e) {            throw new RuntimeException(e);        }        t1.start();    }}